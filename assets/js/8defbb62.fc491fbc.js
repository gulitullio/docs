"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2726],{1234:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"languages/c-plus-plus/puntatori","title":"Puntatori","description":"Un puntatore \xe8 una variabile che contiene l\u2019indirizzo di memoria di un\u2019altra variabile.","source":"@site/content/languages/c-plus-plus/puntatori.md","sourceDirName":"languages/c-plus-plus","slug":"/languages/c-plus-plus/puntatori","permalink":"/docs/content/languages/c-plus-plus/puntatori","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/content/languages/c-plus-plus/puntatori.md","tags":[],"version":"current","frontMatter":{"title":"Puntatori"},"sidebar":"tutorialSidebar","previous":{"title":"Preprocessore","permalink":"/docs/content/languages/c-plus-plus/preprocessore"},"next":{"title":"Return Value Optimization (RVO)","permalink":"/docs/content/languages/c-plus-plus/rvo"}}');var t=i(4848),a=i(8453);const o={title:"Puntatori"},s=void 0,l={},c=[{value:"Puntatori doppi e funzioni",id:"puntatori-doppi-e-funzioni",level:3},{value:"Operazioni aritmetiche sui puntatori",id:"operazioni-aritmetiche-sui-puntatori",level:3},{value:"Puntatori e memoria",id:"puntatori-e-memoria",level:3},{value:"Tipi speciali di puntatori",id:"tipi-speciali-di-puntatori",level:3},{value:"Puntatori vs Riferimenti",id:"puntatori-vs-riferimenti",level:3}];function u(e){const n={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Un puntatore \xe8 una variabile che contiene l\u2019indirizzo di memoria di un\u2019altra variabile."}),"\n",(0,t.jsx)(n.p,{children:"In altre parole, mentre una variabile \u201cnormale\u201d contiene un valore (es. un intero), un puntatore contiene dove quel valore \xe8 memorizzato in memoria"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"int var = 10;\r\nint* ptr = &var;         // 'ptr' punta all\u2019indirizzo di 'var'\r\nstd::cout << *ptr;       // dereferenzia ptr \u2192 stampa 10\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"int* ptr"}),": dichiara un puntatore a int"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"&var"}),": operatore address-of, restituisce l\u2019indirizzo di var"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"*ptr"}),": operatore di dereferenziazione, accede al valore puntato"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"puntatori-doppi-e-funzioni",children:"Puntatori doppi e funzioni"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Puntatore a puntatore"}),"\r\nServe per strutture avanzate: array di puntatori, gestioni dinamiche, etc"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"int** pptr = &ptr;"})," dove ",(0,t.jsx)(n.code,{children:"ptr"})," \xe8 ",(0,t.jsx)(n.code,{children:"int*"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Funzione puntatore"}),"\r\nPermette di chiamare funzioni indirettamente o passare callback a funzione:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"int (*fun)(int,int) = addition;\r\nint result = fun(5,3);\n"})}),"\n",(0,t.jsx)(n.p,{children:"Oppure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"int operation(int x, int y, int (*pf)(int,int)) {\r\n  return (*pf)(x,y);\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Molto utile anche nella gestione dei callback"}),"\n",(0,t.jsx)(n.h3,{id:"operazioni-aritmetiche-sui-puntatori",children:"Operazioni aritmetiche sui puntatori"}),"\n",(0,t.jsx)(n.p,{children:"\xc8 possibile incrementare/decrementare, sommare o sottrarre interi:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"int arr[] = {10,20,30};\r\nint* p = arr;     // arr == &arr[0]\r\np++;              // ora punta a &arr[1]\r\nstd::cout << *p;  // stampa 20\n"})}),"\n",(0,t.jsx)(n.h3,{id:"puntatori-e-memoria",children:"Puntatori e memoria"}),"\n",(0,t.jsx)(n.p,{children:"I puntatori permettono operazioni a basso livello:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"allocazione dinamica: new/delete"}),"\n",(0,t.jsx)(n.li,{children:"strutture dati: linked list, alberi, grafi"}),"\n",(0,t.jsx)(n.li,{children:"efficienza: non si copiano grandi strutture, ma solo indirizzi"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Attenzione per\xf2 a: memory leak, dangling pointer, wild pointer."}),"\n",(0,t.jsx)(n.h3,{id:"tipi-speciali-di-puntatori",children:"Tipi speciali di puntatori"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Puntatore nullo"}),"\r\n",(0,t.jsx)(n.code,{children:"int* ptr = nullptr"}),"; o ",(0,t.jsx)(n.code,{children:"= NULL"}),"; indica che il puntatore non punta ad alcuna locazione valida"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Wild pointer (non inizializzati)"}),"\r\nNon puntano a una locazione valida: usare ",(0,t.jsx)(n.code,{children:"int* ptr"}),"; senza inizializzazione \xe8 pericoloso. Pu\xf2 causare crash"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Dangling pointer"}),"\r\nPuntano a memoria gi\xe0 deallocata o a variabili locali fuori scope. Dereferenziare uno di questi d\xe0 undefined behavior"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Void pointer (void*)"}),"\r\n\xc8 un puntatore generico che pu\xf2 contenere l\u2019indirizzo di qualsiasi tipo, ma non si pu\xf2 dereferenziare direttamente: serve un cast esplicito"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"puntatori-vs-riferimenti",children:"Puntatori vs Riferimenti"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Riferimento (int& r = var;) \xe8 un alias, non pu\xf2 essere nullo e non pu\xf2 essere riassegnato."}),"\n",(0,t.jsx)(n.li,{children:"Puntatore (int* p) pu\xf2 essere nullo, pu\xf2 cambiare cosa punta, richiede * per la dereferenziazione"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>s});var r=i(6540);const t={},a=r.createContext(t);function o(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3376],{4280:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"design-patterns/index","title":"Design Patterns","description":"Un Design Pattern \xe8 una soluzione riutilizzabile e testata per un problema ricorrente nello sviluppo software.","source":"@site/content/design-patterns/index.md","sourceDirName":"design-patterns","slug":"/design-patterns/","permalink":"/docs/content/design-patterns/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/content/design-patterns/index.md","tags":[],"version":"current","frontMatter":{"title":"Design Patterns"},"sidebar":"tutorialSidebar","previous":{"title":"YAGNI - You Aren\u2019t Gonna Need It","permalink":"/docs/content/principi-fontamentali/best-practices/yagni"},"next":{"title":"Creazionali","permalink":"/docs/content/design-patterns/creazionali/"}}');var t=i(4848),s=i(8453);const o={title:"Design Patterns"},l=void 0,a={},c=[{value:"Tipi principali di Design Patterns",id:"tipi-principali-di-design-patterns",level:2},{value:"Vantaggi",id:"vantaggi",level:2},{value:"Svantaggi",id:"svantaggi",level:2},{value:"Buone pratiche",id:"buone-pratiche",level:2}];function d(e){const n={br:"br",em:"em",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Un ",(0,t.jsx)(n.strong,{children:"Design Pattern"})," \xe8 una soluzione riutilizzabile e testata per un problema ricorrente nello sviluppo software.",(0,t.jsx)(n.br,{}),"\n","Non \xe8 un pezzo di codice pronto da copiare e incollare, ma un ",(0,t.jsx)(n.em,{children:"modello concettuale"})," o una ",(0,t.jsx)(n.em,{children:"linea guida"})," che aiuta a risolvere problemi di progettazione in modo efficace e standardizzato."]}),"\n",(0,t.jsx)(n.p,{children:"I design patterns sono nati dall\u2019esperienza di sviluppatori che hanno individuato soluzioni comuni a sfide frequenti nella progettazione di software."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"tipi-principali-di-design-patterns",children:"Tipi principali di Design Patterns"}),"\n",(0,t.jsxs)(n.p,{children:["Secondo la classificazione del ",(0,t.jsx)(n.em,{children:"Gang of Four"})," (GoF), esistono tre categorie principali:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Creazionali"}),(0,t.jsx)(n.br,{}),"\n","Gestiscono la creazione degli oggetti in modo flessibile e controllato.",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"Esempi:"})," Singleton, Factory Method, Abstract Factory, Builder, Prototype."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Strutturali"}),(0,t.jsx)(n.br,{}),"\n","Si concentrano sulla composizione delle classi e degli oggetti.",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"Esempi:"})," Adapter, Decorator, Composite, Proxy, Facade, Bridge, Flyweight."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Comportamentali"}),(0,t.jsx)(n.br,{}),"\n","Definiscono come gli oggetti interagiscono e comunicano tra loro.",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.em,{children:"Esempi:"})," Observer, Strategy, Command, State, Mediator, Iterator, Memento."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"vantaggi",children:"Vantaggi"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Standardizzazione"}),": facilita la collaborazione tra team."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Riutilizzo"}),": soluzioni pronte e collaudate."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manutenibilit\xe0"}),": codice pi\xf9 leggibile e facilmente estendibile."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Flessibilit\xe0"}),": semplifica modifiche ed estensioni."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Documentazione implicita"}),": il nome del pattern racconta gi\xe0 parte della logica."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"svantaggi",children:"Svantaggi"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Overengineering"}),": rischio di complicare il codice usando pattern non necessari."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Curva di apprendimento"}),": serve esperienza per capire quando e come applicarli."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rigidit\xe0"}),": un uso improprio pu\xf2 rendere il sistema meno flessibile."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance"}),": alcuni pattern (es. Decorator, Proxy) introducono un overhead."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"buone-pratiche",children:"Buone pratiche"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Usali come guida, non come regola"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scegli il pattern solo se risolve davvero un problema reale"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Mantieni il codice leggibile"}),": il pattern deve chiarire, non confondere."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Conosci pi\xf9 pattern possibili"}),", ma applicali con criterio."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var r=i(6540);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);
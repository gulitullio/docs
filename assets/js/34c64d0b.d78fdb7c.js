"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2151],{7112:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>s});const i=JSON.parse('{"id":"architetture/mvc","title":"MVC (Model-View-Controller)","description":"E\' un pattern di progettazione che separa un\'applicazione in tre componenti principali:","source":"@site/content/architetture/mvc.md","sourceDirName":"architetture","slug":"/architetture/mvc","permalink":"/docs/content/architetture/mvc","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/content/architetture/mvc.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"MVC (Model-View-Controller)","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Architetture","permalink":"/docs/content/architetture/"},"next":{"title":"MVVM (Model-View-ViewModel)","permalink":"/docs/content/architetture/mvvm"}}');var o=n(4848),l=n(8453);const t={title:"MVC (Model-View-Controller)",sidebar_position:1},c=void 0,a={},s=[{value:"Perch\xe9 usarlo",id:"perch\xe9-usarlo",level:3},{value:"Quando usarlo",id:"quando-usarlo",level:3},{value:"Esempio",id:"esempio",level:3},{value:"Model",id:"model",level:4},{value:"View",id:"view",level:4},{value:"Controller",id:"controller",level:4}];function d(e){const r={code:"code",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.p,{children:"E' un pattern di progettazione che separa un'applicazione in tre componenti principali:"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Model"}),": gestisce i dati e la logica di gioco"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"View"}),": si occupa della rappresentazione visiva e dell'interfaccia utente"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Controller"}),": riceve gli input dell'utente, aggiorna il model e comanda la view"]}),"\n"]}),"\n",(0,o.jsx)(r.hr,{}),"\n",(0,o.jsx)(r.h3,{id:"perch\xe9-usarlo",children:"Perch\xe9 usarlo"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Separazione chiara"})," tra logica di gioco, visualizzazione e input"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Facile manutenzione"}),": modificare una parte non influisce sulle altre"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Testabilit\xe0"}),": \xe8 possibile testare la logica di gioco senza la grafica"]}),"\n",(0,o.jsxs)(r.li,{children:[(0,o.jsx)(r.strong,{children:"Collaborazione"}),": facilita il lavoro in team (programmatori, artisti, game designer)"]}),"\n"]}),"\n",(0,o.jsx)(r.hr,{}),"\n",(0,o.jsx)(r.h3,{id:"quando-usarlo",children:"Quando usarlo"}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsx)(r.li,{children:"Progetti dove si vuole una separazione netta tra UI e logica di gioco."}),"\n",(0,o.jsx)(r.li,{children:"Giochi single player o multiplayer con logica di gioco complessa."}),"\n"]}),"\n",(0,o.jsx)(r.hr,{}),"\n",(0,o.jsx)(r.h3,{id:"esempio",children:"Esempio"}),"\n",(0,o.jsx)(r.p,{children:"Un semplice scenario in cui il giocatore raccoglie punti e il punteggio viene mostrato su schermo."}),"\n",(0,o.jsxs)(r.ul,{children:["\n",(0,o.jsxs)(r.li,{children:["Il giocatore raccoglie una moneta \u2192 Il ",(0,o.jsx)(r.code,{children:"GameController"})," rileva l'evento"]}),"\n",(0,o.jsxs)(r.li,{children:["Il ",(0,o.jsx)(r.code,{children:"GameController"})," aggiorna il ",(0,o.jsx)(r.code,{children:"PlayerModel"})," \u2192 ",(0,o.jsx)(r.code,{children:"playerModel.AddScore(10)"})]}),"\n",(0,o.jsxs)(r.li,{children:["La ",(0,o.jsx)(r.code,{children:"ScoreView"})," viene aggiornata \u2192 ",(0,o.jsx)(r.code,{children:"scoreView.UpdateScore(...)"})]}),"\n"]}),"\n",(0,o.jsx)(r.h4,{id:"model",children:"Model"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:"public class PlayerModel\r\n{\r\n    public int Score { get; private set; }\r\n\r\n    public void AddScore(int amount)\r\n    {\r\n        Score += amount;\r\n    }\r\n}\n"})}),"\n",(0,o.jsx)(r.h4,{id:"view",children:"View"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:'public class ScoreView : MonoBehaviour\r\n{\r\n    public Text scoreText;\r\n\r\n    public void UpdateScore(int score)\r\n    {\r\n        scoreText.text = "Score: " + score;\r\n    }\r\n}\n'})}),"\n",(0,o.jsx)(r.h4,{id:"controller",children:"Controller"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",children:"public class GameController : MonoBehaviour\r\n{\r\n    public PlayerModel playerModel;\r\n    public ScoreView scoreView;\r\n\r\n    private void Start()\r\n    {\r\n        playerModel = new PlayerModel();\r\n        scoreView.UpdateScore(playerModel.Score);\r\n    }\r\n\r\n    public void OnCoinCollected()\r\n    {\r\n        playerModel.AddScore(10);\r\n        scoreView.UpdateScore(playerModel.Score);\r\n    }\r\n}\n"})})]})}function u(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>c});var i=n(6540);const o={},l=i.createContext(o);function t(e){const r=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),i.createElement(l.Provider,{value:r},e.children)}}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8509],{8453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>s});var r=a(6540);const i={},l=r.createContext(i);function t(e){const n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:n},e.children)}},8729:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>t,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"languages/c-plus-plus/lvalue-rvalue","title":"LValue & Rvalue","description":"LValue (Locator Value)","source":"@site/content/languages/c-plus-plus/lvalue-rvalue.md","sourceDirName":"languages/c-plus-plus","slug":"/languages/c-plus-plus/lvalue-rvalue","permalink":"/docs/content/languages/c-plus-plus/lvalue-rvalue","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/content/languages/c-plus-plus/lvalue-rvalue.md","tags":[],"version":"current","frontMatter":{"title":"LValue & Rvalue"},"sidebar":"tutorialSidebar","previous":{"title":"Keyword Auto","permalink":"/docs/content/languages/c-plus-plus/keyword-auto"},"next":{"title":"Move assignment operator","permalink":"/docs/content/languages/c-plus-plus/move-assignment-operator"}}');var i=a(4848),l=a(8453);const t={title:"LValue & Rvalue"},s=void 0,o={},u=[{value:"LValue (Locator Value)",id:"lvalue-locator-value",level:3},{value:"RValue (Read Value / Right Value)",id:"rvalue-read-value--right-value",level:3},{value:"Overview",id:"overview",level:3},{value:"Esempi",id:"esempi",level:3},{value:"Funzioni e ritorni",id:"funzioni-e-ritorni",level:4},{value:"std::move",id:"stdmove",level:4}];function c(e){const n={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"lvalue-locator-value",children:"LValue (Locator Value)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Un ",(0,i.jsx)(n.strong,{children:"lvalue"})," rappresenta un oggetto che ha un indirizzo in memoria e quindi pu\xf2 stare sul lato sinistro di un\u2019assegnazione."]}),"\n",(0,i.jsxs)(n.li,{children:["Gli ",(0,i.jsx)(n.strong,{children:"lvalue"})," persistono oltre l\u2019espressione corrente."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"int x = 5;   // x \xe8 un lvalue\r\nx = 10;      // ok, x pu\xf2 stare a sinistra dell'assegnazione\n"})}),"\n",(0,i.jsx)(n.h3,{id:"rvalue-read-value--right-value",children:"RValue (Read Value / Right Value)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Un ",(0,i.jsx)(n.strong,{children:"rvalue"})," \xe8 un valore temporaneo senza un nome stabile, tipicamente generato da un\u2019espressione."]}),"\n",(0,i.jsxs)(n.li,{children:["Gli ",(0,i.jsx)(n.strong,{children:"rvalue"})," non hanno un indirizzo persistente e non possono stare da soli sul lato sinistro di un\u2019assegnazione."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"int y = 10;\r\nint z = y + 5; // (y + 5) \xe8 un rvalue temporaneo\n"})}),"\n",(0,i.jsx)(n.h3,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Lvalue: ha un nome o un indirizzo, pu\xf2 essere modificato (se non \xe8 const)."}),"\n",(0,i.jsx)(n.li,{children:"Rvalue: \xe8 temporaneo, spesso un risultato intermedio di un calcolo."}),"\n",(0,i.jsx)(n.li,{children:"Un lvalue pu\xf2 diventare rvalue se lo usi come valore."}),"\n",(0,i.jsx)(n.li,{children:"Alcuni tipi di espressioni generano rvalue: letterali numerici (42), il risultato di una funzione che ritorna per valore, espressioni aritmetiche (a+b)."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"esempi",children:"Esempi"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"int a = 5;     // 'a' \xe8 un lvalue\r\nint b = a;     // 'a' qui \xe8 usato come rvalue (il suo valore viene letto)\r\nint c = a + b; // (a + b) \xe8 un rvalue temporaneo\r\n(a + b) = 10;  // Errore: (a + b) \xe8 un rvalue, non ha memoria assegnabile\n"})}),"\n",(0,i.jsx)(n.h4,{id:"funzioni-e-ritorni",children:"Funzioni e ritorni"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"int getValue() { return 42; }\r\n\r\nint main() {\r\n    int x = getValue();  // getValue() ritorna un rvalue\r\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Se una funzione ritorna per riferimento, invece, pu\xf2 produrre un lvalue:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"int global;\r\nint& getRef() { return global; }\r\n\r\nint main() {\r\n    getRef() = 10; // ok, getRef() \xe8 un lvalue\r\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"stdmove",children:"std::move"}),"\n",(0,i.jsx)(n.p,{children:"std::move non sposta veramente nulla ma trasforma un lvalue in un rvalue (pi\xf9 precisamente in un xvalue, eXtended value), permettendo di usare il move constructor o il move assignment invece di una copia."}),"\n",(0,i.jsx)(n.p,{children:"Questo \xe8 utile con oggetti pesanti come std::string, std::vector, ecc."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'// Senza std:move\r\n// Qui viene chiamato il copy constructor, che copia tutto il contenuto di a in b.\r\nint main() {\r\n    std::string a = "Ciao mondo";\r\n    std::string b = a; // COPIA: a rimane invariata\r\n    std::cout << "a: " << a << "\\n";\r\n    std::cout << "b: " << b << "\\n";\r\n}\r\n\r\n// Con std:move\r\n// std::move(a) trasforma a (lvalue) in un rvalue.\r\n// Nessuna copia di memoria pesante, solo un trasferimento di puntatori.\r\nint main() {\r\n    std::string a = "Ciao mondo";\r\n    std::string b = std::move(a); // MOVE: a viene "svuotata"\r\n    std::cout << "a: " << a << "\\n"; // a ora \xe8 in stato valido ma indefinito (spesso vuota)\r\n    std::cout << "b: " << b << "\\n";\r\n}\r\n\n'})})]})}function d(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);
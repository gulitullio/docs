"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4196],{2585:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"principi-fontamentali/best-practices/yagni","title":"YAGNI - You Aren\u2019t Gonna Need It","description":"E\' un acronimo che sta per:","source":"@site/content/principi-fontamentali/best-practices/yagni.md","sourceDirName":"principi-fontamentali/best-practices","slug":"/principi-fontamentali/best-practices/yagni","permalink":"/docs/content/principi-fontamentali/best-practices/yagni","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/content/principi-fontamentali/best-practices/yagni.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"YAGNI - You Aren\u2019t Gonna Need It","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"KISS - Keep It Simple, Stupid","permalink":"/docs/content/principi-fontamentali/best-practices/kiss"},"next":{"title":"Singleton","permalink":"/docs/content/design-patterns/singleton"}}');var o=i(4848),r=i(8453);const s={title:"YAGNI - You Aren\u2019t Gonna Need It",sidebar_position:3},c=void 0,a={},l=[{value:"Vantaggi",id:"vantaggi",level:3},{value:"\u274c Esempio errato \u274c",id:"-esempio-errato-",level:3},{value:"\u2705 Esempio corretto \u2705",id:"-esempio-corretto-",level:3}];function d(e){const n={blockquote:"blockquote",code:"code",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"E' un acronimo che sta per:"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Non ne avrai bisogno"})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["\xc8 un principio nato nel contesto dello sviluppo Agile e promuove l'idea che ",(0,o.jsx)(n.strong,{children:"non bisogna scrivere codice o funzionalit\xe0 che non servono oggi"}),", anche se pensiamo che ",(0,o.jsx)(n.strong,{children:"potrebbero"})," servire in futuro."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"vantaggi",children:"Vantaggi"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Velocit\xe0"}),": evita sprechi di tempo nello scrivere codice non richiesto"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Semplicit\xe0"}),": riduce la complessit\xe0 del progetto, rende pi\xf9 semplice un eventuale refactoring o manutenzione"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Meno bug"}),": meno codice vuol dire meno bug da gestire o testare"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"-esempio-errato-",children:"\u274c Esempio errato \u274c"}),"\n",(0,o.jsx)(n.p,{children:"In questo esempio ci sono funzioni inutilizzate e premature, tempo sprecato per cose non richieste."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:'public class InventorySystem : MonoBehaviour\r\n{\r\n    public void AddItem(string itemName) {\r\n        Debug.Log("Item added: " + itemName);\r\n        SaveToCloud(itemName);       // Not needed now\r\n        SendAnalytics(itemName);     // Not required yet\r\n        CheckAchievements(itemName); // Future feature\r\n    }\r\n\r\n    void SaveToCloud(string item) {\r\n        Debug.Log("Saving to cloud..."); // Not implemented\r\n    }\r\n\r\n    void SendAnalytics(string item) {\r\n        Debug.Log("Sending analytics..."); // Not used yet\r\n    }\r\n\r\n    void CheckAchievements(string item) {\r\n        Debug.Log("Checking achievements..."); // Feature not planned\r\n    }\r\n}\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"-esempio-corretto-",children:"\u2705 Esempio corretto \u2705"}),"\n",(0,o.jsx)(n.p,{children:"E' presente solo il codice necessario, quando sar\xe0 il momento di aggiungere altre funzionalit\xe0 (cloud, analytics...), lo farai con requisiti chiari e concreti."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:'public class InventorySystem : MonoBehaviour\r\n{\r\n    public void AddItem(string itemName) {\r\n        Debug.Log("Item added: " + itemName);\r\n    }\r\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var t=i(6540);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);
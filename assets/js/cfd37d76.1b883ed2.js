"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6417],{450:(i,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"algoritmi/collision-detection","title":"Collision detection","description":"Gli algoritmi di collision detection servono a determinare se due o pi\xf9 oggetti in un ambiente virtuale si intersecano o entrano in contatto.","source":"@site/content/algoritmi/collision-detection.md","sourceDirName":"algoritmi","slug":"/algoritmi/collision-detection","permalink":"/docs/content/algoritmi/collision-detection","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/content/algoritmi/collision-detection.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Collision detection","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Entity-Component-System (ECS)","permalink":"/docs/content/architetture/ecs"},"next":{"title":"Collision resolution","permalink":"/docs/content/algoritmi/collision-resolution"}}');var t=n(4848),l=n(8453);const r={title:"Collision detection",sidebar_position:1},s=void 0,c={},a=[{value:"Perch\xe9 usarli",id:"perch\xe9-usarli",level:3},{value:"Come funzionano",id:"come-funzionano",level:3},{value:"Tipi comuni di Collision Detection",id:"tipi-comuni-di-collision-detection",level:3},{value:"In Unity",id:"in-unity",level:3}];function d(i){const e={br:"br",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...i.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:["Gli algoritmi di collision detection servono a determinare se due o pi\xf9 oggetti in un ambiente virtuale si intersecano o entrano in contatto.",(0,t.jsx)(e.br,{}),"\n","Sono fondamentali nei videogiochi, simulazioni fisiche, realt\xe0 virtuale, CAD e robotica."]}),"\n",(0,t.jsx)(e.p,{children:"In pratica, senza collision detection:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"I personaggi passerebbero attraverso i muri"}),"\n",(0,t.jsx)(e.li,{children:"I proiettili attraverserebbero i nemici senza colpirli"}),"\n",(0,t.jsx)(e.li,{children:"Gli oggetti non reagirebbero realisticamente alla fisica"}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h3,{id:"perch\xe9-usarli",children:"Perch\xe9 usarli"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Prestazioni"}),": gli algoritmi ben implementati evitano sprechi di calcolo, rilevando collisioni solo quando serve."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Fisica"}),": consentire a Unity (o altri motori) di calcolare reazioni (rimbalzi, attriti, ecc.)."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Gameplay"}),": rilevare eventi come \u201ccolpito da un proiettile\u201d, \u201centrato in una zona\u201d, \u201craccolto un oggetto\u201d."]}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h3,{id:"come-funzionano",children:"Come funzionano"}),"\n",(0,t.jsx)(e.p,{children:"Generalmente, il processo ha due fasi:"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Broad Phase"})," (fase larga)"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Filtra velocemente coppie di oggetti che potrebbero collidere."}),"\n",(0,t.jsx)(e.li,{children:"Usa bounding boxes semplici (AABB - Axis-Aligned Bounding Box, o Sphere Bounds)."}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Algoritmi tipici: Spatial Partitioning (QuadTree, Octree, BSP trees, Grid)."}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Narrow Phase"})," (fase ristretta)"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Calcola con pi\xf9 precisione la collisione solo per le coppie candidate."}),"\n",(0,t.jsx)(e.li,{children:"Usa formule geometriche complesse (intersezione tra poligoni, mesh, capsule, ecc.)."}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h3,{id:"tipi-comuni-di-collision-detection",children:"Tipi comuni di Collision Detection"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"AABB vs AABB: collisione tra due rettangoli/cubi allineati agli assi"}),"\n",(0,t.jsx)(e.li,{children:"Sphere vs Sphere: controllo rapido basato su raggio"}),"\n",(0,t.jsx)(e.li,{children:"Raycasting: utile per linee di vista, proiettili, selezioni"}),"\n",(0,t.jsx)(e.li,{children:"OBB (Oriented Bounding Box): bounding box ruotata"}),"\n",(0,t.jsx)(e.li,{children:"Mesh vs Mesh: pi\xf9 costosa, usata solo se serve estrema precisione"}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h3,{id:"in-unity",children:"In Unity"}),"\n",(0,t.jsx)(e.p,{children:"Unity ha gi\xe0 un sistema di collision detection integrato nel Physics Engine:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Collider: componenti che definiscono la forma per la collisione (BoxCollider, SphereCollider, MeshCollider, ecc.)."}),"\n",(0,t.jsx)(e.li,{children:"Rigidbody: per consentire alla fisica di muovere l\u2019oggetto."}),"\n",(0,t.jsx)(e.li,{children:"Trigger: colliders che non bloccano ma segnalano il passaggio di un oggetto."}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Eventi principali:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"OnCollisionEnter, OnCollisionStay, OnCollisionExit"}),"\n",(0,t.jsx)(e.li,{children:"OnTriggerEnter, OnTriggerStay, OnTriggerExit"}),"\n"]})]})}function u(i={}){const{wrapper:e}={...(0,l.R)(),...i.components};return e?(0,t.jsx)(e,{...i,children:(0,t.jsx)(d,{...i})}):d(i)}},8453:(i,e,n)=>{n.d(e,{R:()=>r,x:()=>s});var o=n(6540);const t={},l=o.createContext(t);function r(i){const e=o.useContext(l);return o.useMemo(function(){return"function"==typeof i?i(e):{...e,...i}},[e,i])}function s(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(t):i.components||t:r(i.components),o.createElement(l.Provider,{value:e},i.children)}}}]);
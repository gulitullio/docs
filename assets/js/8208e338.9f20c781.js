"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8820],{6994:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"languages/c-plus-plus/operatori-bitwise","title":"Operatori bitwise","description":"Gli operatori bitwise (o \\"operatori a livello di bit\\") sono operatori che lavorano direttamente sui singoli bit che compongono i numeri, anzich\xe9 sul loro valore numerico complessivo.","source":"@site/content/languages/c-plus-plus/operatori-bitwise.md","sourceDirName":"languages/c-plus-plus","slug":"/languages/c-plus-plus/operatori-bitwise","permalink":"/docs/content/languages/c-plus-plus/operatori-bitwise","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/content/languages/c-plus-plus/operatori-bitwise.md","tags":[],"version":"current","frontMatter":{"title":"Operatori bitwise"},"sidebar":"tutorialSidebar","previous":{"title":"Move assignment operator","permalink":"/docs/content/languages/c-plus-plus/move-assignment-operator"},"next":{"title":"Preprocessore","permalink":"/docs/content/languages/c-plus-plus/preprocessore"}}');var t=n(4848),s=n(8453);const o={title:"Operatori bitwise"},a=void 0,l={},c=[{value:"Esempi pratici",id:"esempi-pratici",level:3},{value:"Quando conviene usarli",id:"quando-conviene-usarli",level:3},{value:"Vantaggi",id:"vantaggi",level:3}];function d(e){const i={br:"br",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.p,{children:'Gli operatori bitwise (o "operatori a livello di bit") sono operatori che lavorano direttamente sui singoli bit che compongono i numeri, anzich\xe9 sul loro valore numerico complessivo.'}),"\n",(0,t.jsxs)(i.p,{children:["Si usano molto in programmazione a basso livello, ma anche in situazioni in cui bisogna gestire flag, maschere di bit, ottimizzare spazio o fare operazioni binarie veloci.",(0,t.jsx)(i.br,{}),"\n","Ogni numero intero in memoria \xe8 rappresentato in binario, gli operatori bitwise manipolano questi bit uno per uno."]}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Operatore"}),(0,t.jsx)(i.th,{children:"Nome"}),(0,t.jsx)(i.th,{children:"Effetto sui bit"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"&"})}),(0,t.jsx)(i.td,{children:"AND bit a bit"}),(0,t.jsxs)(i.td,{children:["1 se ",(0,t.jsx)(i.strong,{children:"entrambi"})," i bit sono 1"]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"|"})}),(0,t.jsx)(i.td,{children:"OR bit a bit"}),(0,t.jsxs)(i.td,{children:["1 se ",(0,t.jsx)(i.strong,{children:"almeno uno"})," dei bit \xe8 1"]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"^"})}),(0,t.jsx)(i.td,{children:"XOR (o OR esclusivo)"}),(0,t.jsxs)(i.td,{children:["1 se ",(0,t.jsx)(i.strong,{children:"solo uno"})," dei bit \xe8 1"]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"~"})}),(0,t.jsx)(i.td,{children:"NOT bit a bit"}),(0,t.jsx)(i.td,{children:"Inverte tutti i bit"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:"<<"})}),(0,t.jsx)(i.td,{children:"Shift a sinistra"}),(0,t.jsx)(i.td,{children:"Sposta i bit verso sinistra (riempiendo con zeri)"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.code,{children:">>"})}),(0,t.jsx)(i.td,{children:"Shift a destra"}),(0,t.jsx)(i.td,{children:"Sposta i bit verso destra (riempiendo con zeri o col bit del segno)"})]})]})]}),"\n",(0,t.jsx)(i.h3,{id:"esempi-pratici",children:"Esempi pratici"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-cpp",children:"a = 6   // 110 in binario\r\nb = 3   // 011 in binario\r\na & b   // AND => 110 & 011 = 010 (cio\xe8 2)\r\na | b   // OR => 110 | 011 = 111 (cio\xe8 7)\r\na ^ b   // XOR => 110 ^ 011 = 101 (cio\xe8 5)\r\n~a      // NOT => ~110 = 011 (cio\xe8 3)\r\na << 1  // Shift a sx => 110 diventa 1100 (cio\xe8 12, ogni spostamento a sinistra moltiplica per 2)\r\na >> 1  // Shift a dx => 110 diventa 011 (cio\xe8 3, ogni spostamento a destra divide per 2)\n"})}),"\n",(0,t.jsx)(i.h3,{id:"quando-conviene-usarli",children:"Quando conviene usarli"}),"\n",(0,t.jsx)(i.p,{children:"Immagina di avere variabili booleane in un unico intero:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-cpp",children:'FLAG_READ  = 1 << 0  // 0001\r\nFLAG_WRITE = 1 << 1  // 0010\r\nFLAG_EXEC  = 1 << 2  // 0100\r\n\r\nvalue = FLAG_READ | FLAG_WRITE  // Abilito lettura e scrittura\r\n\r\n// Controllo se il flag WRITE \xe8 attivo:\r\nif value & FLAG_WRITE:\r\n    print("Scrittura consentita")\n'})}),"\n",(0,t.jsx)(i.h3,{id:"vantaggi",children:"Vantaggi"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Compressione di dati"}),"\r\nPuoi usare pochi bit per memorizzare pi\xf9 valori compatti."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Algoritmi di grafica e crittografia"}),"\r\nMolti algoritmi lavorano sui bit per performance e ottimizzazione."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Ottimizzazione delle performance"}),"\r\nOperazioni come ",(0,t.jsx)(i.code,{children:"x << 1"})," sono pi\xf9 veloci di ",(0,t.jsx)(i.code,{children:"x \\* 2"})," (anche se nei moderni compilatori la differenza \xe8 minima)."]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>a});var r=n(6540);const t={},s=r.createContext(t);function o(e){const i=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:i},e.children)}}}]);
"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3085],{2235:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"naming-conventions/snake-case","title":"snake_case","description":"Tutte le lettere sono minuscole, le parole sono separate da un underscore (_).","source":"@site/content/naming-conventions/snake-case.md","sourceDirName":"naming-conventions","slug":"/naming-conventions/snake-case","permalink":"/docs/content/naming-conventions/snake-case","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/content/naming-conventions/snake-case.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"snake_case","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"camelCase","permalink":"/docs/content/naming-conventions/camel-case"},"next":{"title":"SCREAMING_SNAKE_CASE","permalink":"/docs/content/naming-conventions/screaming-snake-case"}}');var t=s(4848),r=s(8453);const o={title:"snake_case",sidebar_position:3},a=void 0,c={},l=[{value:"Linguaggi comuni",id:"linguaggi-comuni",level:3},{value:"Utilizzo",id:"utilizzo",level:3},{value:"Note",id:"note",level:3},{value:"Esempio",id:"esempio",level:3}];function u(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Tutte le lettere sono minuscole, le parole sono separate da un underscore (",(0,t.jsx)(n.code,{children:"_"}),")."]}),"\n",(0,t.jsx)(n.h3,{id:"linguaggi-comuni",children:"Linguaggi comuni"}),"\n",(0,t.jsx)(n.p,{children:"Python, Ruby, C, PHP"}),"\n",(0,t.jsx)(n.h3,{id:"utilizzo",children:"Utilizzo"}),"\n",(0,t.jsx)(n.p,{children:"Variabili, Funzioni/metodi, Nomi di file"}),"\n",(0,t.jsx)(n.h3,{id:"note",children:"Note"}),"\n",(0,t.jsxs)(n.p,{children:["In Python \xe8 convenzione usare ",(0,t.jsx)(n.code,{children:"snake_case"})," per nomi di funzioni, metodi e variabili, mentre le classi usano ",(0,t.jsx)(n.code,{children:"PascalCase"}),". Anche in altri linguaggi (es. C, Ruby) questo stile \xe8 comune per nomi identificatori."]}),"\n",(0,t.jsx)(n.h3,{id:"esempio",children:"Esempio"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"from typing import Optional\r\n\r\nclass user_profile:\r\n    def __init__(self, user_id: int, user_name: str, is_active: bool):\r\n        self.user_id = user_id\r\n        self.user_name = user_name\r\n        self.is_active = is_active\r\n\r\nclass user_service:\r\n    def __init__(self):\r\n        self.users: list[user_profile] = []\r\n\r\n    def add_user(self, user_profile: user_profile) -> None:\r\n        self.users.append(user_profile)\r\n\r\n    def get_user_by_id(self, user_id: int) -> Optional[user_profile]:\r\n        for user in self.users:\r\n            if user.user_id == user_id:\r\n                return user\r\n        return None\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);
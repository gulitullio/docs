"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1213],{8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(6540);const t={},s=r.createContext(t);function a(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},9639:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"architetture/event-driven","title":"Event-Driven Architecture (EDA)","description":"L\u2019Event-Driven Architecture (EDA) \xe8 un paradigma in cui il flusso dell\u2019applicazione \xe8 guidato da eventi.","source":"@site/content/architetture/event-driven.md","sourceDirName":"architetture","slug":"/architetture/event-driven","permalink":"/docs/content/architetture/event-driven","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/content/architetture/event-driven.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Event-Driven Architecture (EDA)","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Component-Based Architecture","permalink":"/docs/content/architetture/component-based"},"next":{"title":"Entity-Component-System (ECS)","permalink":"/docs/content/architetture/ecs"}}');var t=i(4848),s=i(8453);const a={title:"Event-Driven Architecture (EDA)",sidebar_position:5},o=void 0,l={},c=[{value:"Perch\xe9 usarlo",id:"perch\xe9-usarlo",level:3},{value:"Svantaggi da considerare",id:"svantaggi-da-considerare",level:3},{value:"Quando usarlo",id:"quando-usarlo",level:3},{value:"Esempio",id:"esempio",level:3},{value:"EventBus",id:"eventbus",level:4},{value:"Player",id:"player",level:4},{value:"UIManager",id:"uimanager",level:4},{value:"Best practice in Unity",id:"best-practice-in-unity",level:3}];function d(e){const n={code:"code",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"L\u2019Event-Driven Architecture (EDA) \xe8 un paradigma in cui il flusso dell\u2019applicazione \xe8 guidato da eventi.\r\nUn evento \xe8 qualsiasi cambiamento di stato o azione significativa che pu\xf2 essere notata dal sistema (es. \u201cil player ha raccolto una moneta\u201d, \u201cun nemico \xe8 stato ucciso\u201d, \u201cil timer \xe8 scaduto\u201d)."}),"\n",(0,t.jsx)(n.p,{children:"Concetti chiave:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Publisher (emettitore)"}),": genera l\u2019evento (es. Player raccoglie un oggetto)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Subscriber (ascoltatore)"}),": reagisce all\u2019evento (es. UIManager aggiorna il punteggio)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event Bus / Dispatcher"}),": meccanismo che trasporta gli eventi dai Publisher ai Subscriber senza che conoscano direttamente l\u2019uno l\u2019altro (loose coupling)"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"perch\xe9-usarlo",children:"Perch\xe9 usarlo"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Disaccoppiamento"}),": i componenti non hanno riferimenti diretti tra loro, riducendo dipendenze rigide."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scalabilit\xe0"}),": \xe8 facile aggiungere nuovi comportamenti senza toccare il codice esistente."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manutenibilit\xe0"}),": meno \u201cspaghetti code\u201d e meno rischi di side-effect."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reattivit\xe0"}),": si presta a sistemi che devono reagire velocemente a input e cambiamenti."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"svantaggi-da-considerare",children:"Svantaggi da considerare"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Difficolt\xe0 nel ",(0,t.jsx)(n.strong,{children:"debugging"})," (flusso non lineare)"]}),"\n",(0,t.jsxs)(n.li,{children:["Rischio di ",(0,t.jsx)(n.strong,{children:"event storm"})," (troppe notifiche)"]}),"\n",(0,t.jsxs)(n.li,{children:["Necessit\xe0 di documentare bene ",(0,t.jsx)(n.strong,{children:"quali eventi esistono"})," e ",(0,t.jsx)(n.strong,{children:"chi li ascolta"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"quando-usarlo",children:"Quando usarlo"}),"\n",(0,t.jsx)(n.p,{children:"Per un progetto medio-grande, l\u2019Event Bus \xe8 spesso la scelta migliore:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Evita riferimenti diretti tra oggetti in scena"}),"\n",(0,t.jsx)(n.li,{children:"Facilita l\u2019aggiunta di listener in qualsiasi punto del codice"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"esempio",children:"Esempio"}),"\n",(0,t.jsx)(n.p,{children:"In Unity, gli eventi possono essere gestiti in diversi modi:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"C# Events / Delegates \u2192 nativo, veloce, ma meno dinamico."}),"\n",(0,t.jsx)(n.li,{children:"UnityEvent \u2192 integrato nell\u2019Inspector, ottimo per designer."}),"\n",(0,t.jsx)(n.li,{children:"Event Bus Pattern \u2192 centralizza la gestione degli eventi."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Immaginiamo lo scenario un cui il giocatore raccoglie una moneta, la UI aggiorna il punteggio senza che ",(0,t.jsx)(n.code,{children:"Player"})," conosca ",(0,t.jsx)(n.code,{children:"UIManager"}),".\r\n",(0,t.jsx)(n.code,{children:"Player"})," rileva la collisione con una moneta, incrementa il conteggio e invia un evento con ",(0,t.jsx)(n.code,{children:"EventBus.OnCoinCollected"}),".\r\n",(0,t.jsx)(n.code,{children:"UIManager"})," ascolta quell\u2019evento e aggiorna il testo in UI.\r\nNon c'\xe8 alcun riferimento diretto tra Player e UI, quindi se cambi la UI, il Player non si accorge di nulla."]}),"\n",(0,t.jsx)(n.h4,{id:"eventbus",children:"EventBus"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public static class EventBus\r\n{\r\n    // Passa il numero di monete raccolte come parametro\r\n    public static Action<int> OnCoinCollected;\r\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"player",children:"Player"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public class Player : MonoBehaviour\r\n{\r\n    private int coins = 0;\r\n\r\n    private void OnTriggerEnter(Collider other)\r\n    {\r\n        if (other.CompareTag("Coin"))\r\n        {\r\n            coins++;\r\n            EventBus.OnCoinCollected?.Invoke(coins);\r\n            Destroy(other.gameObject);\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"uimanager",children:"UIManager"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public class UIManager : MonoBehaviour\r\n{\r\n    [SerializeField] private Text coinsText;\r\n\r\n    private void OnEnable()\r\n    {\r\n        EventBus.OnCoinCollected += UpdateCoinUI;\r\n    }\r\n\r\n    private void OnDisable()\r\n    {\r\n        EventBus.OnCoinCollected -= UpdateCoinUI;\r\n    }\r\n\r\n    private void UpdateCoinUI(int totalCoins)\r\n    {\r\n        coinsText.text = "Coins: " + totalCoins;\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"best-practice-in-unity",children:"Best practice in Unity"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Definire tutti gli eventi in un unico punto (EventBus o pi\xf9 bus tematici)."}),"\n",(0,t.jsx)(n.li,{children:"Scollegare sempre i listener (OnDisable) per evitare memory leak."}),"\n",(0,t.jsx)(n.li,{children:"Evitare eventi \u201ctroppo generici\u201d \u2014 mantenere nomi chiari e specifici."}),"\n",(0,t.jsx)(n.li,{children:"In progetti grandi, valutare ScriptableObject Event Channels per un flusso pi\xf9 editor-friendly."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);
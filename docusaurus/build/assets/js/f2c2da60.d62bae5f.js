"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2111],{4240:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"principi-fontamentali/best-practices/dry","title":"DRY - Don\'t Repeat Yourself","description":"E\' una linea guida fondamentale nello sviluppo software, introdotta nel libro The Pragmatic Programmer.","source":"@site/content/principi-fontamentali/best-practices/dry.md","sourceDirName":"principi-fontamentali/best-practices","slug":"/principi-fontamentali/best-practices/dry","permalink":"/docs/content/principi-fontamentali/best-practices/dry","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/content/principi-fontamentali/best-practices/dry.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"DRY - Don\'t Repeat Yourself","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Best Practices","permalink":"/docs/content/principi-fontamentali/best-practices/"},"next":{"title":"KISS - Keep It Simple, Stupid","permalink":"/docs/content/principi-fontamentali/best-practices/kiss"}}');var t=i(4848),o=i(8453);const a={title:"DRY - Don't Repeat Yourself",sidebar_position:1},s=void 0,c={},l=[{value:"Vantaggi",id:"vantaggi",level:3},{value:"\u274c Esempio errato \u274c",id:"-esempio-errato-",level:3},{value:"\u2705 Esempio corretto \u2705",id:"-esempio-corretto-",level:3}];function d(e){const n={blockquote:"blockquote",code:"code",em:"em",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["E' una linea guida fondamentale nello sviluppo software, introdotta nel libro ",(0,t.jsx)(n.em,{children:"The Pragmatic Programmer"}),"."]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Evita di ripetere porzioni di codice"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:'Ogni "conoscenza" nel sistema dovrebbe avere una singola rappresentazione non ambigua, autorevole e definitiva.'}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"vantaggi",children:"Vantaggi"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Semplicit\xe0"}),": codice pi\xf9 pulito e leggibile"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Riutilizzo"}),": logiche comuni riutilizzabili"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manutenzione"}),": cambi il codice in un solo punto"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Meno bug"}),": riduci il rischio di incoerenze tra duplicati"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"-esempio-errato-",children:"\u274c Esempio errato \u274c"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public class Enemy : MonoBehaviour\r\n{\r\n    void Die() {\r\n        Debug.Log("Enemy died");\r\n        Destroy(gameObject);\r\n        AudioSource.PlayClipAtPoint(Resources.Load<AudioClip>("EnemyDeath"), transform.position);\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public class Player : MonoBehaviour\r\n{\r\n    void Die() {\r\n        Debug.Log("Player died");\r\n        Destroy(gameObject);\r\n        AudioSource.PlayClipAtPoint(Resources.Load<AudioClip>("PlayerDeath"), transform.position);\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"-esempio-corretto-",children:"\u2705 Esempio corretto \u2705"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public class DeathHandler : MonoBehaviour\r\n{\r\n    public void HandleDeath(string deathSoundName) {\r\n        Debug.Log($"{gameObject.name} died");\r\n        Destroy(gameObject);\r\n        AudioSource.PlayClipAtPoint(Resources.Load<AudioClip>(deathSoundName), transform.position);\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public class Enemy : MonoBehaviour\r\n{\r\n    DeathHandler deathHandler;\r\n\r\n    public void Die() {\r\n        deathHandler.HandleDeath("EnemyDeath");\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public class Player : MonoBehaviour\r\n{\r\n    DeathHandler deathHandler;\r\n\r\n    public void Die() {\r\n        deathHandler.HandleDeath("PlayerDeath");\r\n    }\r\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>s});var r=i(6540);const t={},o=r.createContext(t);function a(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);